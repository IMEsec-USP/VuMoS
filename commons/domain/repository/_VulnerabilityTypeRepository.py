from abc import ABC, abstractmethod
from typing import List

from commons.domain.models import VulnerabilityType

class VulnerabilityTypeRepository(ABC):

	@abstractmethod
	def get_by_id(self,
				  vulnerability_type_id: int) -> VulnerabilityType:
		raise NotImplementedError()

	@abstractmethod
	def get_by_name(self,
					name: str) -> VulnerabilityType:
		raise NotImplementedError()

	@abstractmethod
	def add(self,
			vulnerability_type: VulnerabilityType) -> VulnerabilityType:
		raise NotImplementedError()

	@abstractmethod
	def update(self,
			   vulnerability_type: VulnerabilityType) -> VulnerabilityType:
		raise NotImplementedError()
